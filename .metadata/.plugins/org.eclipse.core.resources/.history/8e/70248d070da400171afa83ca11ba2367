import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.TreeMap;
import java.util.TreeSet;

public class Main {
	static BufferedReader br;
	static TreeMap<String, String> shelving;
	static HashMap<String, String> auxSheving1;

	static class operation {
		String action;
		String nameBook;
		String autors;

		public operation(String action, String nameBook, String autors) {
			this.action = action;
			this.nameBook = nameBook;
			this.autors = autors;
		}

	}

	public static void main(String args[]) throws Exception {
		br = new BufferedReader(new InputStreamReader(System.in));
		String line = "";
		shelving = new TreeMap<>();
		auxSheving1 = new HashMap<>();
		while (!(line = br.readLine()).equals("END")) {
			String[] date = line.split("by");
			String nameBook = date[0];
			String autor = date[1].replace(".", "").replace(",", "").trim().replace(" ", "");
			shelving.put(autor.trim(), nameBook.trim());
			auxSheving1.put(nameBook.trim(), autor.trim());

		}
		TreeMap<String, String> auxSheving = (TreeMap<String, String>) shelving.clone();
		while (!(line = br.readLine()).equals("END")) {

			if (line.equals("SHELVE")) {

				auxSheving = (TreeMap<String, String>) shelving.clone();

				System.out.println("END");
			} else {
				String action = line.substring(0, line.indexOf('"')).trim();
				String auxNameBook = line.substring(line.indexOf("\""), line.length()).trim();
				if (action.equals("BORROW")) {
					auxSheving.remove(auxNameBook);
				} else {
					auxSheving.put(auxSheving1.get(auxNameBook), auxNameBook);
					String auxAnterior="";
					for (String key : shelving.keySet()) {
						if (auxNameAnterior.equals("") && shelving.get(key).equals(operations.get(i).nameBook)) {
							System.out.println("Put " + auxNameBook + " first");
							break;
						} else if (shelving.get(key).equals(auxNameBook) {
							System.out.println("Put " + operations.get(i).nameBook + " after " + auxNameAnterior);
							break;
						}
						auxNameAnterior = shelving.get(key);
					}
				}

			}

		}

	}
}
