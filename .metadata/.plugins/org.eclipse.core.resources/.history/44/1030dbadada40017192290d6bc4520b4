from operator import attrgetter;
from gi.overrides.keysyms import value
from optparse import Values
class ejecicio:
    def __init__(self,name,time):
        self.name=name
        self.time=time
class date:
    def __init__(self,numTeam,solved,time,nameExcercice):
        self.numTeam=numTeam
        self.solved=solved
        self.time=time
        self.nameExcercice=nameExcercice
    def __cmp__(self, other):
         
        if self.solved < other.solved :
            rst = -1
        elif self.solved > other.solved :
            rst = 1
        else :
            if self.time < other.time :
                rst = 1
            elif self.time > other.time :
                rst = -1
            else:
                if self.numTeam < other.numTeam :
                    rst = 1
                elif self.numTeam > other.numTeam :
                    rst = -1 
                else:
                    return 0    
        return rst

def findDuration(time):
    x,y=time.split(":")
    return (int(x)*60)+int(y)
def main():
    n= int(input())
    input()
    for i in range(0,n):
        results={}
        line=input()
        while line:
            
            datos=line.split(" ")
            status=datos[3]
            if status=="Y":
                time=findDuration(datos[2])
                if time<=20:
                    time=time+20
                if(not results.__contains__(datos[0])):
                    lista=[]
    
                    lista.append(ejecicio(datos[1],time))
                    results[datos[0]]=date(datos[0],1, time,lista)
                else:
                    ban=False
                    timeAux=0
                    for da in results[datos[0]].nameExcercice:
                        if da.name==datos[1]:
                            ban=True
                            timeAux=da.time
                            break
                       
                    if ban:
                        if timeAux>time:
                            results[datos[0]].time=results[datos[0]].timetime 
                    else :                                
                        results[datos[0]].solved=results[datos[0]].solved+1
                        results[datos[0]].time=results[datos[0]].time+time
                        results[datos[0]].nameExcercice.append(ejecicio(datos[1],time))   
                    
                
                
            line=input()        
            
        resultusFinally=results.values()
        
        #sorted(resultusFinally)
        sorted(resultusFinally, key=attrgetter("time","solved"),reverse=True) 
        for dato in resultusFinally:
            print(dato.numTeam,dato.solved,dato.time)   
        print()            

if __name__ == '__main__':
    main()